
module tekrarlayici(clk,sin,rec,sout);

input clk,sin,rec;

output sout;

reg [7:0] temp;

reg recone_clock;

reg [2:0] counter;

	always@(posedge clk)
begin
	recone_clock<=rec;


		always@(posedge clk)
	begin
		if((rec==1'b1)&&(recone_clock==1'b0))
     begin		
		counter[2:0]=3'b0;
		temp[0]<=sin;
		temp[7:1]<=7'd0;
     end	
else
		if((rec==1'b1)&&counter[2:0]!=3'd7)
	begin		
 		counter[2:0]<=counter[2:0]+3'b1;
		temp[0]<=sin;
		temp[7:1]<=temp[6:0];		
	end	
	
else
	begin
			counter[2:0]<=counter[2:0];
			temp[7:1]<=temp[6:0];

	case(counter)
	3'd0: sr[0]<=sr[0];
	3'd1: sr[0]<=sr[1];
	3'd2: sr[0]<=sr[2];
        3'd3: sr[0]<=sr[3];
	3'd4: sr[0]<=sr[4];
	3'd5: sr[0]<=sr[5];
	3'd6: sr[0]<=sr[6];

        default:   temp[0]<temp[7];	
			
		
	end// else end							
		
end

assign sout=temp[0];


	endmodule
		